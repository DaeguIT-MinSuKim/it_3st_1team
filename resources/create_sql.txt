-- 내 스키마
DROP SCHEMA IF EXISTS bookmanagement;

-- 내 스키마
CREATE SCHEMA bookmanagement;

use bookmanagement;

-- 회원
drop table users;
drop table takeinout;
drop table history;
drop table reserve;
drop table request;

CREATE TABLE bookmanagement.users (
	code     VARCHAR(20)  NOT NULL, 
	name     VARCHAR(20)  NOT NULL,
	id       VARCHAR(20)  NOT NULL,
	pw       VARCHAR(50)  NOT NULL, 
	tel      VARCHAR(20)  NULL,
	email    VARCHAR(50)  NULL,
	zipcode  varchar(6)   null,
	addr_id  VARCHAR(100) NULL,
	addr_de	 varchar(100) null,
	blacktf  BOOLEAN      NULL default 0,
	entryday DATE         NULL,
	freeday  DATE         null
);

-- 회원
ALTER TABLE bookmanagement.users
	ADD CONSTRAINT PK_users
		PRIMARY KEY (
			code
		);

-- 사원
drop table employee;

CREATE TABLE bookmanagement.employee (
	code    VARCHAR(20)  NOT NULL,
	name    VARCHAR(20)  NOT NULL,
	id      VARCHAR(20)  NOT NULL,
	pw      VARCHAR(50)  NOT NULL,
	tel     VARCHAR(20)  NULL,
	email   VARCHAR(50)  NULL,
	zipcode  varchar(6)   null,
	addr_id VARCHAR(100) NULL,
	addr_de	 varchar(100) null,
	titleno INT(10)      NOT NULL
);

-- 사원
ALTER TABLE bookmanagement.employee
	ADD CONSTRAINT PK_employee
		PRIMARY KEY (
			code
		);

-- 직책
CREATE TABLE bookmanagement.title (
	titleno INT(10)     NOT NULL,
	name    VARCHAR(20) NULL,
	power   VARCHAR(20) NULL
);

-- 직책
ALTER TABLE bookmanagement.title
	ADD CONSTRAINT PK_title
		PRIMARY KEY (
			titleno
		);

-- 도서
CREATE TABLE bookmanagement.book (
	bkcode   VARCHAR(20)  NOT NULL,
	isbn     VARCHAR(20)  NULL,
	rentable BOOLEAN      NULL default 1,
	bkname   VARCHAR(100) NOT NULL,
	author   VARCHAR(50)  NOT NULL,
	publish  VARCHAR(50)  NOT NULL,
	pubyear  INT(4)       NOT NULL,
	info     LONGTEXT     NULL,
	loca_num VARCHAR(6)   NULL
);

-- 도서
ALTER TABLE bookmanagement.book
	ADD CONSTRAINT PK_book
		PRIMARY KEY (
			bkcode
		);

-- 출납
drop table takeinout;

CREATE TABLE bookmanagement.takeinout (
	inout_no  INT(10)     NOT null primary key auto_increment,
	code      VARCHAR(20) NOT NULL, 
	bkcode    VARCHAR(20) NOT NULL, 
	rentday   DATE        NULL, 
	returnday DATE        NULL,
	isbn varchar(20) not null
);

-- 예약
CREATE TABLE bookmanagement.reserve (
	re_no  INT(10)     NOT NULL primary key auto_increment, 
	code   VARCHAR(20) NOT NULL, 
	bkcode VARCHAR(20) NOT NULL, 
	isbn   VARCHAR(20)     NULL 
);

-- 도서분류
CREATE TABLE bookmanagement.category (
	num       INT(3)      NOT NULL,
	catename  VARCHAR(10) NULL,
	catesize  int(1)     NULL,
	parentnum INT(10)     NULL
);

-- 도서분류
ALTER TABLE bookmanagement.category
	ADD CONSTRAINT PK_category
		PRIMARY KEY (
			num
		);

-- 위치
CREATE TABLE bookmanagement.location (
	loca_num     VARCHAR(6) NOT NULL,
	loca_section VARCHAR(2) NOT NULL
);

-- 위치
ALTER TABLE bookmanagement.location
	ADD CONSTRAINT PK_location
		PRIMARY KEY (
			loca_num
		);

-- 출납history
CREATE TABLE bookmanagement.history (
	his_no     INT(100)    NOT NULL primary key auto_increment,
	code       VARCHAR(20) NOT NULL,
	bkcode     VARCHAR(20) NOT NULL,
	realreturn DATE        NULL,
	delay      INT(10)     NULL
);

-- 신청
drop table request;

CREATE TABLE bookmanagement.request (
	code       VARCHAR(20) NOT NULL,
	bkname  VARCHAR(100) NOT NULL,
	author  VARCHAR(50)  NOT NULL,
	publish VARCHAR(50)  NOT NULL,
	pubyear INT(4)       NOT NULL,
	isbn    VARCHAR(20)  NULL,
	price   INT(10)      NULL
);

-- 우편번호
CREATE TABLE bookmanagement.post (
	zipcode         CHAR(5)     NULL,
	sido            VARCHAR(20) NULL,
	sigungu         VARCHAR(20) NULL,
	doro            VARCHAR(80) NULL,
	build_num1      INT(5)      NULL,
	build_num2      INT(5)      NULL,
	bubjung_name    VARCHAR(20) NULL,
	ri              VARCHAR(20) NULL,
	heangjeong_name VARCHAR(20) NULL,
	bunji_num1      INT(5)      NULL,
	bunji_num2      INT(5)      NULL
);

-- 사원
ALTER TABLE bookmanagement.employee
	ADD CONSTRAINT FK_title_TO_employee
		FOREIGN KEY (
			titleno
		)
		REFERENCES bookmanagement.title (
			titleno
		);

-- 도서
ALTER TABLE bookmanagement.book
	ADD CONSTRAINT FK_location_TO_book
		FOREIGN KEY (
			loca_num
		)
		REFERENCES bookmanagement.location (
			loca_num
		);

-- 출납
ALTER TABLE bookmanagement.takeinout
	ADD CONSTRAINT FK_users_TO_takeinout
		FOREIGN KEY (code) REFERENCES bookmanagement.users (code)
		on update cascade;

-- 출납
ALTER TABLE bookmanagement.takeinout
	ADD CONSTRAINT FK_book_TO_takeinout
		FOREIGN KEY (
			bkcode
		)
		REFERENCES bookmanagement.book (
			bkcode
		);

-- 예약
ALTER TABLE bookmanagement.reserve
	ADD CONSTRAINT FK_users_TO_reserve
		FOREIGN KEY (
			code
		)
		REFERENCES bookmanagement.users (
			code
		)on update cascade;

-- 예약
ALTER TABLE bookmanagement.reserve
	ADD CONSTRAINT FK_book_TO_reserve
		FOREIGN KEY (
			bkcode
		)
		REFERENCES bookmanagement.book (
			bkcode
		);

-- 출납history
ALTER TABLE bookmanagement.history
	ADD CONSTRAINT FK_users_TO_history
		FOREIGN KEY (
			code
		)
		REFERENCES bookmanagement.users (
			code
		)on update cascade;

-- 출납history
ALTER TABLE bookmanagement.history
	ADD CONSTRAINT FK_book_TO_history
		FOREIGN KEY (
			bkcode
		)
		REFERENCES bookmanagement.book (
			bkcode
		);
		
ALTER TABLE bookmanagement.history
	ADD column (returnday date null);
ALTER TABLE bookmanagement.history
	ADD column (rentday date null);
		
-- 신청request
ALTER TABLE bookmanagement.request
	ADD CONSTRAINT FK_users_TO_request
		FOREIGN KEY (
			code
		)
		REFERENCES bookmanagement.users (
			code
		)on update cascade;
		
ALTER TABLE bookmanagement.request
	ADD column (reqday date null);		
	
ALTER TABLE bookmanagement.reserve
	ADD column (resday date null);